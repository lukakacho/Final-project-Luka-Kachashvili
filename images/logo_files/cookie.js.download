// old functions needs to be rewriten!!!
// one day i will save you!!!


cookie = {
    config: {
        path: "path=/",
        cookieObj: [{
            catID: 0,
            data_id: 0
        }]
    },
    time: {
        date: new Date(),
        expires: "expires=",
        oneDay: 24 * 60 * 60 * 1000

    },
    flags: {
        favorites: "favorites"
    },

    init: function() {
        if (cookie.get(cookie.flags.favorites))
            return false;

        cookie.setCookieTime(1);
        document.cookie = 'favorites' + '=' + JSON.stringify(cookie.config.cookieObj) + ';' + cookie.time.expires + cookie.time.date.toUTCString() + ';' + cookie.config.path;
    },

    set: function(cookieName, cookieValue, exdays) {
        cookie.setCookieTime(exdays);
        document.cookie = cookieName + '=' + cookieValue + ';' + cookie.time.expires + cookie.time.date.toUTCString() + ';' + cookie.config.path;
    },

    get: function(cookieName) {
        var name = cookieName + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    },
    destroy: function(cookieName) {
        //console.log(document.cookie = cookieName + "= ; expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;");
        //document.cookie = cookieName+'=' + ";expires=Thu, 01 Jan 1970 00:00:01 GMT ;domain=anton.turebi.ge;path=/";
        //document.cookie = cookieName+'=' + ";expires=Thu, 01 Jan 1970 00:00:01 GMT ;";
        cookie.set(cookieName, "", -1);
    },
    destroyCookieArray: function(cookieName, array = null) {
        var cookieStructure = array != null ? JSON.parse(cookie.get(array)) : cookieName;
        cookieStructure.forEach(function(item, key) {
            if (item.data_id == cookieName) {
                cookie.deleteCookieFromArray(cookieStructure, key);
            }
        });
        cookie.setCookieTime(1);
        document.cookie = cookie.flags.favorites + '=' + JSON.stringify(cookieStructure) + ';' + cookie.time.expires + cookie.time.date.toUTCString() + ';' + cookie.config.path;
        return false;
    },
    setAsArray: function(cookieName, cookieArray, exdays) { //change name to favoritearray
        var cookieStorage = [];
        var obj = {};
        if (!cookie.get(cookieName) == "")
            cookieStorage = cookieStorage.concat(JSON.parse(cookie.get(cookieName)));
        obj.catID = cookieArray[0]; // CatID
        obj.data_id = cookieArray[1]; // DataID
        cookieStorage.push(obj);
        cookie.setCookieTime(exdays);
        document.cookie = cookieName + '=' + JSON.stringify(cookieStorage) + ';' + cookie.time.expires + cookie.time.date.toUTCString() + ';' + cookie.config.path;
    },
    setCookieTime: function(exdays) {
        return cookie.time.date.setTime(cookie.time.date.getTime() + (exdays * cookie.time.oneDay));
    },
    deleteCookieFromArray: function(cookieArray, index) {
        var tempArray = cookieArray.splice(index, 1)
        return tempArray;
    },

    carArray: function(cookieName, cookieValue, exdays) {
        var cookieStorage = [];
        var obj = {};
        if (!cookie.get(cookieName) == "")
            cookieStorage = cookieStorage.concat(JSON.parse(cookie.get(cookieName)));
        obj.data_id = cookieValue;
        cookieStorage.push(obj);
        cookie.setCookieTime(exdays);
        document.cookie = cookieName + '=' + JSON.stringify(cookieStorage) + ';' + cookie.time.expires + cookie.time.date.toUTCString() + ';' + cookie.config.path;

    },
    destroyCarArray: function(cookieName, array = null) {
        var cookieStructure = array != null ? JSON.parse(cookie.get(array)) : cookieName;
        cookieStructure.forEach(function(item, key) {
            if (item.data_id == cookieName) {
                cookie.deleteCookieFromArray(cookieStructure, key);
            }
        });
        cookie.setCookieTime(1);
        document.cookie = 'car' + '=' + JSON.stringify(cookieStructure) + ';' + cookie.time.expires + cookie.time.date.toUTCString() + ';' + cookie.config.path;
        return false;
    },
}